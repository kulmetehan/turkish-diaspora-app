name: TDA Daily DB Cleanup

on:
  schedule:
    - cron: '0 3 * * *'  # Dagelijks om 03:00
  workflow_dispatch:

jobs:
  cleanup-db:
    name: Cleanup Supabase ai_logs
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update -y
          sudo apt-get install -y postgresql-client

      - name: Clean ai_logs down to 100k rows (batched)
        shell: bash
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          set -euo pipefail

          if [[ -z "${DATABASE_URL:-}" ]]; then
            echo "DATABASE_URL is not set" >&2
            exit 1
          fi

          # 1. Maak de DATABASE_URL geschikt voor psql (strip +asyncpg)
          EFFECTIVE_DATABASE_URL="${DATABASE_URL/postgresql+asyncpg:/postgresql:}"

          # 2. sslmode=require afdwingen
          if [[ "$EFFECTIVE_DATABASE_URL" == *"sslmode="* ]]; then
            true
          elif [[ "$EFFECTIVE_DATABASE_URL" == *"?"* ]]; then
            EFFECTIVE_DATABASE_URL="${EFFECTIVE_DATABASE_URL}&sslmode=require"
          else
            EFFECTIVE_DATABASE_URL="${EFFECTIVE_DATABASE_URL}?sslmode=require"
          fi

          echo "ðŸš€ Starting cleanup loopâ€¦"

          # Batches van 50k rijen per keer verwijderen tot er â‰¤100k overblijven
          while true; do
            TOTAL_COUNT=$(psql --tuples-only --no-align --quiet "$EFFECTIVE_DATABASE_URL" << 'EOF'
SELECT COUNT(*) FROM public.ai_logs;
EOF
)
            echo "Current row count: $TOTAL_COUNT"

            if (( TOTAL_COUNT <= 100000 )); then
              echo "âœ… Table already at or under 100000 rows, stopping."
              break
            fi

            echo "ðŸ§¹ Deleting oldest ~50000 rowsâ€¦"

            psql --set ON_ERROR_STOP=1 --quiet "$EFFECTIVE_DATABASE_URL" << 'EOF'
WITH doomed AS (
    SELECT id
    FROM public.ai_logs
    ORDER BY created_at ASC
    LIMIT 50000
)
DELETE FROM public.ai_logs
USING doomed
WHERE public.ai_logs.id = doomed.id;
EOF

            echo "Batch deleted. Continuing loopâ€¦"
          done

          echo "ðŸ”§ Running VACUUM ANALYZEâ€¦"
          psql --set ON_ERROR_STOP=1 --quiet "$EFFECTIVE_DATABASE_URL" << 'EOF'
VACUUM ANALYZE public.ai_logs;
EOF

          echo "ðŸŽ¯ Done! ai_logs trimmed to <=100k rows and optimized."
